$date
	Tue May 09 18:13:04 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module msb_tb $end
$var wire 6 ! output_pos [5:0] $end
$var reg 1 " clk $end
$var reg 32 # input_num [31:0] $end
$scope module msb_32bit $end
$var wire 1 " clk $end
$var wire 32 $ input_num [31:0] $end
$var reg 6 % output_pos [5:0] $end
$var integer 32 & flag [31:0] $end
$var integer 32 ' i [31:0] $end
$scope module msb_8bit_0 $end
$var wire 1 " clk $end
$var wire 8 ( input_num [7:0] $end
$var reg 4 ) output_pos [3:0] $end
$var integer 32 * flag [31:0] $end
$var integer 32 + i [31:0] $end
$upscope $end
$scope module msb_8bit_1 $end
$var wire 1 " clk $end
$var wire 8 , input_num [7:0] $end
$var reg 4 - output_pos [3:0] $end
$var integer 32 . flag [31:0] $end
$var integer 32 / i [31:0] $end
$upscope $end
$scope module msb_8bit_2 $end
$var wire 1 " clk $end
$var wire 8 0 input_num [7:0] $end
$var reg 4 1 output_pos [3:0] $end
$var integer 32 2 flag [31:0] $end
$var integer 32 3 i [31:0] $end
$upscope $end
$scope module msb_8bit_3 $end
$var wire 1 " clk $end
$var wire 8 4 input_num [7:0] $end
$var reg 4 5 output_pos [3:0] $end
$var integer 32 6 flag [31:0] $end
$var integer 32 7 i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b11111111111111111111111111111111 7
b0 6
b0 5
bx 4
b11111111111111111111111111111111 3
b0 2
b0 1
bx 0
b11111111111111111111111111111111 /
b0 .
b0 -
bx ,
b11111111111111111111111111111111 +
b0 *
b0 )
bx (
b11111111111111111111111111111111 '
b0 &
b0 %
bx $
bx #
1"
b0 !
$end
#5
0"
#10
b110 5
b110 -
b110 )
b11111111111111111111111111111111 '
b1 6
b100 7
b11111111111111111111111111111111 3
b1 .
b100 /
b1 *
b100 +
b110001 (
b110001 ,
b0 0
b110001 4
1"
b110001000000000011000100110001 #
b110001000000000011000100110001 $
#15
0"
#20
b110 )
b110 -
b0 5
b11110 !
b11110 %
b100 +
b1 *
b100 /
b1 .
b11111111111111111111111111111111 3
b11111111111111111111111111111111 7
b0 6
b1 &
b10 '
b0 4
1"
b11000100110001 #
b11000100110001 $
#25
0"
#30
b1110 !
b1110 %
b0 -
b1 )
b0 '
b1 &
b11111111111111111111111111111111 7
b11111111111111111111111111111111 3
b11111111111111111111111111111111 /
b0 .
b11111111111111111111111111111111 +
b1 *
b1 (
b0 ,
1"
b1 #
b1 $
#35
0"
#40
b1 )
b1 !
b1 %
b11111111111111111111111111111111 +
b1 *
b11111111111111111111111111111111 /
b11111111111111111111111111111111 3
b11111111111111111111111111111111 7
b11111111111111111111111111111111 '
b1 &
1"
#45
0"
#50
b1 !
b1 %
b1 )
b11111111111111111111111111111111 '
b1 &
b11111111111111111111111111111111 7
b11111111111111111111111111111111 3
b11111111111111111111111111111111 /
b11111111111111111111111111111111 +
b1 *
1"
